function data = getStateOccupancy(data, ch_idx, histplot)
% Get the average occupency of each state (i.e. fraction time in each state)
% Plot the resutls in a histrogram
%
% Author: David S. White
%
% updates: 
% --------
% 2019-08-22 DSW wrote the code


% find indices of analyzed traces and put them into a vector
idx = zeros(length(vertcat(data.rois(:, ch_idx).disc_fit)),1);
for i = 1:size(data.rois, 1)
    if ~isempty(data.rois(i, ch_idx).disc_fit)
        idx(i) = i;
    end
end
idx = nonzeros(idx); % remove zeros inserted between nonconsecutive roi analyses
nrois = size(idx,1); 

all_occupencies = zeros(50,1); % allocate space to large number 
total_frames = 0; 
for i = idx'
    frames = length(data.rois(i,ch_idx).time_series);
    per_state = total_frames * data.rois(i,ch_idx).disc_fit.components(:,1); 
    all_occupencies = all_occupencies(1:length(per_state)) + per_state; 
    to
end
% remove the end zeros 


% compute for each component per trace: 
for ii = idx'
    mu(1) = data.rois(ii, ch_idx).disc_fit.components(1,2);
    st(1) = data.rois(ii, ch_idx).disc_fit.components(1,3);
    for jj = 2:length(data.rois(ii, ch_idx).disc_fit.components(:,2))
        mu(jj) = data.rois(ii, ch_idx).disc_fit.components(jj,2);
        st(jj) = data.rois(ii, ch_idx).disc_fit.components(jj,3);
        snr_comp(jj-1) = (mu(jj) - mu(jj-1))/st(jj-1);
    end
    % set SNR to NaN if only one component is found
    if size(data.rois(ii, ch_idx).disc_fit.components, 1) == 1
        data.rois(ii, ch_idx).SNR = NaN;
    else
        data.rois(ii, ch_idx).SNR = mean(snr_comp);
    end
end

% make a graphical histogram if given parameter
if histplot
    figure();
    histogram(vertcat(data.rois(:, ch_idx).SNR));
    title('SNR Histogram')
    xlabel('SNR')
    ylabel('Count')
end
end